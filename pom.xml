<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Project configuration -->

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.andreicozma</groupId>
    <artifactId>infinibuilder</artifactId>

<!--    Change this version number before a new release -->
    <version>1.0.0-public</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <weburl>www.andreicozma.com/307</weburl>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>14</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>14</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>14</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>14</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>14</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>14</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>14</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>14.0.2.1</version>
            <classifier>win</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>14.0.2.1</version>
            <classifier>linux</classifier>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>14.0.2.1</version>
            <classifier>mac</classifier>
        </dependency>
        <dependency>
            <groupId>com.interactivemesh.jfx.importer.obj</groupId>
            <artifactId>model-importer</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>InfiniBuilder</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <verbose>true</verbose>
                </configuration>
            </plugin>

            <plugin>
                <!-- This plugin install dependencies for JavaFX libraries-->
                <!-- You can run mvn javafx:run to start the game -->
                <!-- HOW TO RUN: -->
                <!-- ./mvnw javafx:run -->
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.3</version>
                <configuration>
                    <mainClass>app.GameLauncher</mainClass>
                </configuration>
            </plugin>

            <!-- This plugin includes all dependencies within the JAR file -->
            <!-- This creates a standalone executable package without the need of external libraries-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <!-- add Main-Class to manifest file -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>app.GameLauncher</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Use mvn exec:java to run the class and start the program-->
                <!-- HOW TO RUN: -->
                <!-- ./mvnw exec:java -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <mainClass>app.GameLauncher</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <!-- Import local 3D Model Important Library-->
                <!-- HOW DO RUN: -->
                <!-- ./mvnw validate -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>com.interactivemesh.jfx.importer.obj</groupId>
                            <artifactId>model-importer</artifactId>
                            <version>1.0</version>
                            <packaging>jar</packaging>
                            <file>${basedir}/lib/interactive-mesh/jim3dsModelImporterJFX.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- HOW TO RUN: -->
                <!-- ./mvnw github-release:github-release-->
                <groupId>com.ragedunicorn.tools.maven</groupId>
                <artifactId>github-release-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <owner>andreicozma1</owner>
                            <repository>InfiniBuilder</repository>
                            <server>github-oauth</server>
                            <tagName>v${project.version}</tagName>
                            <name>${project.build.finalName} v${project.version}</name>
                            <targetCommitish>master</targetCommitish>
                            <body>Requires Java JDK ${maven.compiler.source}+.
                                Download ${project.build.finalName}.jar and run execute.sh for the best performance.
                                Visit ${weburl} for more information.
                            </body>
                            <!-- <releaseNotes>src/main/resources/release-notes-example.md</releaseNotes>-->
                            <assets>
                                <asset>target/${project.build.finalName}.jar</asset>
                                <asset>docs/execute.sh</asset>
                                <asset>docs/README.md</asset>
                            </assets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

</project>
